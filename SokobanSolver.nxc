
//#define THRESHOLD_LIGHTSENSOR 52
#define NEAR 9
#define SPEED -30
#define BLACK 23
task main()
{
     SetSensorLight(IN_1);   // Middle
     SetSensorLight(IN_2);   // Right
     SetSensorLight(IN_3);   // Left
     SetSensorUltrasonic(IN_4);// UltraSonicSensor
     
     int minLightValue = 101;
     int maxLightValue = 0;
     int threshold_lightsensor = 50;
     
     while(true){
                 //Update Min/Max Light Values
                 if(SENSOR_1 < minLightValue) minLightValue = SENSOR_1;
                 if(SENSOR_1 > maxLightValue) maxLightValue = SENSOR_1;
                 threshold_lightsensor = (maxLightValue + minLightValue) / 2;
                 
                 int sen1Diff = (SENSOR_1 - threshold_lightsensor) * 0.8;
                 
                 if(SENSOR_1 < threshold_lightsensor)
                 {
                    sen1Diff *= 2;
                 }
                 
                 int aSpeed = SPEED - sen1Diff;
                 int bSpeed = SPEED + sen1Diff;
                 
                 if(aSpeed > 0) aSpeed = 0;
                 if(bSpeed > 0) bSpeed = 0;
                 OnFwd(OUT_A, aSpeed);
                 OnFwd(OUT_B, bSpeed);
                 
                 
                 
                 /*
          if(SENSOR_1 < THRESHOLD_LIGHTSENSOR){
              OnFwd(OUT_A, SPEED);
              OnFwd(OUT_B, SPEED-20);
          }
          else{
              OnFwd(OUT_B, SPEED);
              OnFwd(OUT_A, SPEED-20);
          }
          */
          TextOut(1,60, "Light Sensor: "+NumToStr(SENSOR_1) + "            ");
          TextOut(1,50, "Treshold    : "+NumToStr(threshold_lightsensor) + "            ");

          if(SENSOR_3 < BLACK){
              TextOut(1,1, "LEFT LightSensor Black");
          }
          else{
              TextOut(1,1, "                       ");
          }
          
          if(SENSOR_2 < BLACK){
              TextOut(1,15, "RIGHT LightSensor Black");
          }
          else{
              TextOut(1,15, "                       ");
          }
          
          TextOut(1,45, NumToStr(SensorUS(IN_4)) + "            ");

          //while(SensorUS(IN_4)>NEAR);


          if(SensorUS(IN_4)<=NEAR){
               TextOut(1,30, "Have a can  ");
          }
          else{
               TextOut(1,30, "                       ");
          }

          
          
     }
}

void forwardUntilCrossing()
{


}

void crossing(int direction){

     if(direction == 1 ){
      // Turn to the RIGHT
      RotateMotorEx(OUT_AB, 75, 360, 50, true, true);
     }
     
     if(direction == 0){
      // Go on straight forward
     }

     if(direction == 2){
      // Turn to the LEFT
      RotateMotorEx(OUT_AB, 75, -360, 50, true, true);
     }
}




 /*
static double _dt;
static double _max;
static double _min;
static double _Kp;
static double _Kd;
static double _Ki;
static double _pre_error;
static double _integral;

void lsPidInit(double dt, double max, double min, double Kp, double Kd, double Ki)
{
     _dt = dt;
     _max = max;
     _min = min;
     _Kp = Kp;
     _Kd = Kd;
     _Ki = Ki;
}

              */

















